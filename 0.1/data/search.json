{"list":[{"title":"external:@elgato-stream-deck/node","link":"<a href=\"external-@elgato-stream-deck_node.html\">@elgato-stream-deck/node</a>"},{"title":"external:@julusian/jpeg-turbo","link":"<a href=\"external-@julusian_jpeg-turbo.html\">@julusian/jpeg-turbo</a>"},{"title":"external:array-keyed-map","link":"<a href=\"external-array-keyed-map.html\">array-keyed-map</a>"},{"title":"external:colornames","link":"<a href=\"external-colornames.html\">colornames</a>"},{"title":"external:eventemitter3","link":"<a href=\"external-eventemitter3.html\">eventemitter3</a>"},{"title":"external:hex-and-rgba","link":"<a href=\"external-hex-and-rgba.html\">hex-and-rgba</a>"},{"title":"external:queue","link":"<a href=\"external-queue.html\">queue</a>"},{"title":"external:sharp","link":"<a href=\"external-sharp.html\">sharp</a>"},{"title":"Image","link":"<a href=\"Image.html\">Image</a>","description":"<p>An instance of {@link Image} represents an image to be displayed on a {@link Page} or {@link Key}.</p>"},{"title":"Image.Source","link":"<a href=\"Image.html#.Source\">Source</a>","description":"<p>An image {@link Image.Source} can be any of the following;</p>\n<ul>\n<li>An image file path string to be loaded by\n{@link https://sharp.pixelplumbing.com/api-constructor#sharp|sharp - constructor}.</li>\n<li>An image Buffer to be loaded by\n{@link https://sharp.pixelplumbing.com/api-constructor#sharp|sharp - constructor}.</li>\n<li>An existing {@link Image} instance.</li>\n<li>An Array of {@link Image.Source|Image.Sources}.</li>\n<li>An Object with the following properties, requiring at least one of the first three properties;</li>\n</ul>"},{"title":"Image.Color","link":"<a href=\"Image.html#.Color\">Color</a>","description":"<p>A {@link Image.Color} can be any of the following;</p>\n<ul>\n<li>A color name string recognized by the {@link external:colornames} library.</li>\n<li>An rgb(a) hexadecimal color string, with or without a leading <code>#</code>.\n(e.g. <code>0f0</code>, <code>0f0f</code>, <code>#00ff00</code>, <code>#00ff00ff</code>)</li>\n<li>An Array of numbers with a length of either <code>3</code> or <code>4</code>, each value being between <code>0</code> and <code>255</code>\ninclusive.</li>\n<li>An Object with the following color channel properties;</li>\n</ul>"},{"title":"Image.FrameData","link":"<a href=\"Image.html#.FrameData\">FrameData</a>","description":"<p>An Object containing frame data for an {@link Image}.</p>"},{"title":"Image#WIDTH","link":"<a href=\"Image.html#WIDTH\">WIDTH</a>","description":"<p>The width of the {@link Image} in pixels.</p>"},{"title":"Image#HEIGHT","link":"<a href=\"Image.html#HEIGHT\">HEIGHT</a>","description":"<p>The height of the {@link Image} in pixels.</p>"},{"title":"Image#SPLIT_FRAMES","link":"<a href=\"Image.html#SPLIT_FRAMES\">SPLIT_FRAMES</a>","description":"<p>An object describing the dimensions used to generate split frames.</p>"},{"title":"Image#SCALE_FRAMES","link":"<a href=\"Image.html#SCALE_FRAMES\">SCALE_FRAMES</a>","description":"<p>The scale used to generate scaled frames.</p>"},{"title":"Image#SOURCE","link":"<a href=\"Image.html#SOURCE\">SOURCE</a>","description":"<p>The {@link Image.Source} used to create the {@link Image}.</p>"},{"title":"Image#metadata","link":"<a href=\"Image.html#metadata\">metadata</a>","description":"<p>An object populated with metadata generated by {@link external:sharp}.</p>\n<p>See {@link https://sharp.pixelplumbing.com/api-input#metadata|sharp - metadata}.</p>"},{"title":"Image#frameCount","link":"<a href=\"Image.html#frameCount\">frameCount</a>","description":"<p>The number of frames in the {@link Image}.</p>"},{"title":"Image#currentFrame","link":"<a href=\"Image.html#currentFrame\">currentFrame</a>","description":"<p>The index of the current frame in the {@link Image}.</p>"},{"title":"Image#loopCount","link":"<a href=\"Image.html#loopCount\">loopCount</a>","description":"<p>The number of times the {@link Image} loops.</p>"},{"title":"Image#currentLoop","link":"<a href=\"Image.html#currentLoop\">currentLoop</a>","description":"<p>The current loop number of the {@link Image}.</p>"},{"title":"Image#loadTime","link":"<a href=\"Image.html#loadTime\">loadTime</a>","description":"<p>The number of milliseconds the {@link Image} took to load.</p>"},{"title":"Image#destroyed","link":"<a href=\"Image.html#destroyed\">destroyed</a>","description":"<p>Whether or not the {@link Image} has been destroyed.</p>"},{"title":"Image#event:sharpLoaded","link":"<a href=\"Image.html#event:event:sharpLoaded\">event:sharpLoaded</a>","description":"<p>Sharp loaded event fired after sources have been loaded and composited\ninto the {@link external:sharp} instance.</p>"},{"title":"Image#event:frameLoaded","link":"<a href=\"Image.html#event:event:frameLoaded\">event:frameLoaded</a>","description":"<p>Frame loaded event fired after each frame is loaded.</p>"},{"title":"Image#event:imageLoaded","link":"<a href=\"Image.html#event:event:imageLoaded\">event:imageLoaded</a>","description":"<p>Image loaded event fired after the final frame is loaded.</p>"},{"title":"Image#event:frameUpdated","link":"<a href=\"Image.html#event:event:frameUpdated\">event:frameUpdated</a>","description":"<p>Frame updated event fired when <code>{@link Image#currentFrame}</code> has changed.</p>"},{"title":"Image#event:error","link":"<a href=\"Image.html#event:event:error\">event:error</a>","description":"<p>Error event fired when an error occurs.</p>"},{"title":"Image#event:destroy","link":"<a href=\"Image.html#event:event:destroy\">event:destroy</a>","description":"<p>Destroy event fired when the {@link Image} is destroyed.</p>"},{"title":"Image#sharp","link":"<a href=\"Image.html#sharp\">sharp</a>","description":"<p>Get a clone of the {@link external:sharp} instance of the {@link Image}.</p>"},{"title":"Image#getFrame","link":"<a href=\"Image.html#getFrame\">getFrame</a>","description":"<p>Get the {@link Image.FrameData} of the current image frame. If the current frame has not\nyet loaded returns <code>null</code>.</p>"},{"title":"Image#startAnimation","link":"<a href=\"Image.html#startAnimation\">startAnimation</a>","description":"<p>Starts the {@link Image|Image's} animation if <code>{@link Image#frameCount}</code> is greater than\n<code>1</code>, otherwise this is a no-op.</p>"},{"title":"Image#stopAnimation","link":"<a href=\"Image.html#stopAnimation\">stopAnimation</a>","description":"<p>Stops the {@link Image|Image's} animation if <code>{@link Image#frameCount}</code> is greater than\n<code>1</code>, otherwise this is a no-op.</p>"},{"title":"Image#nextFrame","link":"<a href=\"Image.html#nextFrame\">nextFrame</a>","description":"<p>Progresses the {@link Image|Image's} animation <code>1</code> frame, skipping the delay, if\n<code>{@link Image#frameCount}</code> is greater than <code>1</code>, otherwise this is a no-op.</p>"},{"title":"Image#setCurrentFrame","link":"<a href=\"Image.html#setCurrentFrame\">setCurrentFrame</a>","description":"<p>Set the <code>{@link Image#currentFrame}</code> of the {@link Image}.</p>"},{"title":"Image#resetAnimation","link":"<a href=\"Image.html#resetAnimation\">resetAnimation</a>","description":"<p>Reset the {@link Image|Image's} <code>{@link Image#currentFrame}</code> and <code>{@link Image#currentLoop}</code>\nif <code>{@link Image#frameCount}</code> is greater than <code>1</code>, otherwise this is a no-op.</p>"},{"title":"Image#destroy","link":"<a href=\"Image.html#destroy\">destroy</a>","description":"<p>Clean up all internal state data used by the {@link Image} in preparation for garbage\ncollection.</p>"},{"title":"module:streamdeck-ui-node","link":"<a href=\"module-streamdeck-ui-node.html\">streamdeck-ui-node</a>","description":"<p>The {@link module:streamdeck-ui-node|streamdeck-ui-node} module returned as an Object when importing the library.</p>"},{"title":"module:streamdeck-ui-node.StreamDeckInfo","link":"<a href=\"module-streamdeck-ui-node.html#.StreamDeckInfo\">StreamDeckInfo</a>","description":"<p>An Object describing a connected Stream Deck device.</p>"},{"title":"module:streamdeck-ui-node.StreamDeckModel","link":"<a href=\"module-streamdeck-ui-node.html#.StreamDeckModel\">StreamDeckModel</a>","description":"<p>A short string describing a Stream Deck model.</p>\n<p>Can be one of:\n<code>'original'</code>, <code>'originalv2'</code>, <code>'original-mk2'</code>, <code>'mini'</code>,\n<code>'miniv2'</code>, <code>'xl'</code>, <code>'xlv2'</code>, <code>'pedal'</code>, <code>'plus'</code></p>"},{"title":"module:streamdeck-ui-node.StreamDeckOptions","link":"<a href=\"module-streamdeck-ui-node.html#.StreamDeckOptions\">StreamDeckOptions</a>","description":"<p>A Object holding options for creating a {@link StreamDeck} instance.</p>"},{"title":"module:streamdeck-ui-node.listStreamDecks","link":"<a href=\"module-streamdeck-ui-node.html#.listStreamDecks\">listStreamDecks</a>","description":"<p>Get information on connected Stream Deck devices.</p>"},{"title":"module:streamdeck-ui-node.openStreamDeck","link":"<a href=\"module-streamdeck-ui-node.html#.openStreamDeck\">openStreamDeck</a>","description":"<p>Open the first Stream Deck device listed by {@link module:streamdeck-ui-node.listStreamDecks}.</p>"},{"title":"module:streamdeck-ui-node.openStreamDeck(2)","link":"<a href=\"module-streamdeck-ui-node.html#.openStreamDeck2\">openStreamDeck</a>","description":"<p>Open the first Stream Deck device listed by {@link module:streamdeck-ui-node.listStreamDecks}\nthat matches the given HID path or model string.</p>"},{"title":"module:streamdeck-ui-node.manageStreamDeck","link":"<a href=\"module-streamdeck-ui-node.html#.manageStreamDeck\">manageStreamDeck</a>","description":"<p>Manage user interface elements on a Stream Deck already opened by\n{@link external:@elgato-stream-deck/node}.</p>"},{"title":"Key","link":"<a href=\"Key.html\">Key</a>","description":"<p>An instance of {@link Key} represents a virtual key on a {@link Page} created via\n{@link StreamDeck#createKey}.</p>"},{"title":"Key#STREAMDECK","link":"<a href=\"Key.html#STREAMDECK\">STREAMDECK</a>","description":"<p>The {@link StreamDeck} that created the {@link Key}.</p>"},{"title":"Key#STREAMDECK_NODE","link":"<a href=\"Key.html#STREAMDECK_NODE\">STREAMDECK_NODE</a>","description":"<p>The {@link external:@elgato-stream-deck/node} instance managed by the {@link StreamDeck} that created\nthe {@link Key}.</p>"},{"title":"Key#KEY_COUNT","link":"<a href=\"Key.html#KEY_COUNT\">KEY_COUNT</a>","description":"<p>The number of keys on the Stream Deck.</p>"},{"title":"Key#KEY_WIDTH","link":"<a href=\"Key.html#KEY_WIDTH\">KEY_WIDTH</a>","description":"<p>The width of each key on the Stream Deck in pixels.</p>"},{"title":"Key#KEY_HEIGHT","link":"<a href=\"Key.html#KEY_HEIGHT\">KEY_HEIGHT</a>","description":"<p>The height of each key on the Stream Deck in pixels.</p>"},{"title":"Key#HOLD_TIME","link":"<a href=\"Key.html#HOLD_TIME\">HOLD_TIME</a>","description":"<p>The number of milliseconds after the {@link Key#event:down} is triggered that the\n{@link Key#event:hold} will be triggered. A value of <code>0</code> means the {@link Key#event:hold}\nis disabled. If undefined {@link Page#event:hold|Page#hold events} will be allowed to\npropagate from {@link Page|Pages} that the {@link Key} is attached to.</p>"},{"title":"Key#PRESS_TIME","link":"<a href=\"Key.html#PRESS_TIME\">PRESS_TIME</a>","description":"<p>The number of milliseconds after the {@link Key#event:down} is triggered that the press\nscaling effect will apply. A value of <code>0</code> means the press scaling effect lasts until\nthe {@link Key#event:up} is triggered.</p>"},{"title":"Key#PRESS_SCALE","link":"<a href=\"Key.html#PRESS_SCALE\">PRESS_SCALE</a>","description":"<p>The default scale the {@link Key} will use for the press scaling effect. A value of <code>1</code>\nmeans the press scaling effect is disabled.</p>"},{"title":"Key#IDLE_TIME","link":"<a href=\"Key.html#IDLE_TIME\">IDLE_TIME</a>","description":"<p>The number of milliseconds of inactivity before the {@link Key#event:idle} is triggered.\nA value of <code>0</code> means the {@link Key#event:idle} is disabled.</p>"},{"title":"Key#backgroundImage","link":"<a href=\"Key.html#backgroundImage\">backgroundImage</a>","description":"<p>The background image of the {@link Key}.</p>"},{"title":"Key#image","link":"<a href=\"Key.html#image\">image</a>","description":"<p>The image of the {@link Key}.</p>"},{"title":"Key#destroyed","link":"<a href=\"Key.html#destroyed\">destroyed</a>","description":"<p>Whether or not the {@link Key} has been destroyed.</p>"},{"title":"Key#event:focus","link":"<a href=\"Key.html#event:event:focus\">event:focus</a>","description":"<p>Focus event fired when any {@link Page} that the {@link Key} is attached to gains focus.</p>"},{"title":"Key#event:blur","link":"<a href=\"Key.html#event:event:blur\">event:blur</a>","description":"<p>Blur event fired when any {@link Page} that the {@link Key} is attached to loses focus.</p>"},{"title":"Key#event:attach","link":"<a href=\"Key.html#event:event:attach\">event:attach</a>","description":"<p>Attach event fired when the {@link Key} is attached to a {@link Page}.</p>"},{"title":"Key#event:detach","link":"<a href=\"Key.html#event:event:detach\">event:detach</a>","description":"<p>Detach event fired when the {@link Key} is detached from a {@link Page}.</p>"},{"title":"Key#event:down","link":"<a href=\"Key.html#event:event:down\">event:down</a>","description":"<p>Down event fired when a key is pressed and a {@link Page} that the {@link Key}\nis attached to has focus.</p>"},{"title":"Key#event:hold","link":"<a href=\"Key.html#event:event:hold\">event:hold</a>","description":"<p>Hold event fired when a key is pressed down for <code>{@link Key#HOLD_TIME}</code>\nmilliseconds. If <code>{@link Key#HOLD_TIME}</code> is <code>0</code> this event is disabled. If\n<code>{@link Key#HOLD_TIME}</code> is undefined {@link Page#event:hold|Page#hold events} will be\nallowed to propagate from the {@link Page} that the {@link Key} is attached to.</p>"},{"title":"Key#event:up","link":"<a href=\"Key.html#event:event:up\">event:up</a>","description":"<p>Up event fired when a key is released and a {@link Page} that the {@link Key}\nis attached to had focus when it was initially pressed.</p>"},{"title":"Key#event:click","link":"<a href=\"Key.html#event:event:click\">event:click</a>","description":"<p>Click event fired after the {@link Key#event:up} if the {@link Key#event:hold} had not\nbeen fired.</p>"},{"title":"Key#event:held","link":"<a href=\"Key.html#event:event:held\">event:held</a>","description":"<p>Held event fired after the {@link Key#event:up} if the {@link Key#event:hold} had been\nfired.</p>"},{"title":"Key#event:activity","link":"<a href=\"Key.html#event:event:activity\">event:activity</a>","description":"<p>Activity event fired after a user interacts with the Stream Deck device's keys\nwhile a {@link Page} that the {@link Key} is attached to has or gains focus.</p>"},{"title":"Key#event:idle","link":"<a href=\"Key.html#event:event:idle\">event:idle</a>","description":"<p>Idle event fired after <code>{@link Key#IDLE_TIME}</code> milliseconds of inactivity. If\n<code>{@link Key#IDLE_TIME}</code> is <code>0</code> this event is disabled.</p>"},{"title":"Key#event:error","link":"<a href=\"Key.html#event:event:error\">event:error</a>","description":"<p>Error event fired when an error occurs.</p>"},{"title":"Key#event:create","link":"<a href=\"Key.html#event:event:create\">event:create</a>","description":"<p>Create event fired when the {@link Key} is created.</p>"},{"title":"Key#event:destroy","link":"<a href=\"Key.html#event:event:destroy\">event:destroy</a>","description":"<p>Destroy event fired when the {@link Key} is destroyed.</p>"},{"title":"Key#isPressed","link":"<a href=\"Key.html#isPressed\">isPressed</a>","description":"<p>Returns whether or not the {@link Key} is pressed down.</p>"},{"title":"Key#createBackgroundImage","link":"<a href=\"Key.html#createBackgroundImage\">createBackgroundImage</a>","description":"<p>Create a new {@link Image} with a width of <code>{@link Key#KEY_WIDTH}</code> and a height of\n<code>{@link Key#KEY_HEIGHT}</code>.</p>"},{"title":"Key#setBackgroundImage","link":"<a href=\"Key.html#setBackgroundImage\">setBackgroundImage</a>","description":"<p>Set the background image of the {@link Key}. If no image argument is passed this is the\nsame as calling {@link Key#clearBackgroundImage}.</p>"},{"title":"Key#clearBackgroundImage","link":"<a href=\"Key.html#clearBackgroundImage\">clearBackgroundImage</a>","description":"<p>Clear the background image of the {@link Key}.</p>"},{"title":"Key#getBackgroundFrame","link":"<a href=\"Key.html#getBackgroundFrame\">getBackgroundFrame</a>","description":"<p>Get the current frame of the background image for the {@link Key}. If no background image\nis set or if the background image frame has not yet loaded returns <code>null</code>.</p>"},{"title":"Key#createImage","link":"<a href=\"Key.html#createImage\">createImage</a>","description":"<p>Create a new {@link Image} with a width of <code>{@link Key#KEY_WIDTH}</code> and a height of\n<code>{@link Key#KEY_HEIGHT}</code>. The newly created {@link Image} will have scaled frames if applicable.</p>"},{"title":"Key#setImage","link":"<a href=\"Key.html#setImage\">setImage</a>","description":"<p>Set the image of the {@link Key}. If no image argument is passed this is the same as calling\n{@link Key#clearImage}.</p>"},{"title":"Key#clearImage","link":"<a href=\"Key.html#clearImage\">clearImage</a>","description":"<p>Clear the image of the {@link Key}.</p>"},{"title":"Key#getFrame","link":"<a href=\"Key.html#getFrame\">getFrame</a>","description":"<p>Get the current frame of the image for the {@link Page}. If no image is set or if the image\nframe has not yet loaded returns <code>null</code>.</p>"},{"title":"Key#draw","link":"<a href=\"Key.html#draw\">draw</a>","description":"<p>Draw the {@link Key} to the Stream Deck's panel.</p>"},{"title":"Key#destroy","link":"<a href=\"Key.html#destroy\">destroy</a>","description":"<p>Clean up all internal state data used by the {@link Key} in preparation for garbage\ncollection and detach from all {@link Page|Pages}.</p>"},{"title":"Page","link":"<a href=\"Page.html\">Page</a>","description":"<p>An instance of {@link Page} represents a virtual page on a {@link StreamDeck|StreamDeck's} panel created via\n{@link StreamDeck#createPage}.</p>"},{"title":"Page#STREAMDECK","link":"<a href=\"Page.html#STREAMDECK\">STREAMDECK</a>","description":"<p>The {@link StreamDeck} that created the {@link Page}.</p>"},{"title":"Page#STREAMDECK_NODE","link":"<a href=\"Page.html#STREAMDECK_NODE\">STREAMDECK_NODE</a>","description":"<p>The {@link external:@elgato-stream-deck/node} instance managed by the {@link StreamDeck} that created\nthe {@link Page}.</p>"},{"title":"Page#KEY_COUNT","link":"<a href=\"Page.html#KEY_COUNT\">KEY_COUNT</a>","description":"<p>The number of keys on the Stream Deck.</p>"},{"title":"Page#KEY_WIDTH","link":"<a href=\"Page.html#KEY_WIDTH\">KEY_WIDTH</a>","description":"<p>The width of each key on the Stream Deck in pixels.</p>"},{"title":"Page#KEY_HEIGHT","link":"<a href=\"Page.html#KEY_HEIGHT\">KEY_HEIGHT</a>","description":"<p>The height of each key on the Stream Deck in pixels.</p>"},{"title":"Page#PANEL_ROW_COUNT","link":"<a href=\"Page.html#PANEL_ROW_COUNT\">PANEL_ROW_COUNT</a>","description":"<p>The number of rows on the Stream Deck's panel.</p>"},{"title":"Page#PANEL_COLUMN_COUNT","link":"<a href=\"Page.html#PANEL_COLUMN_COUNT\">PANEL_COLUMN_COUNT</a>","description":"<p>The number of columns on the Stream Deck's panel.</p>"},{"title":"Page#PANEL_WIDTH","link":"<a href=\"Page.html#PANEL_WIDTH\">PANEL_WIDTH</a>","description":"<p>The width of all panel columns on the Stream Deck combined in pixels.</p>"},{"title":"Page#PANEL_HEIGHT","link":"<a href=\"Page.html#PANEL_HEIGHT\">PANEL_HEIGHT</a>","description":"<p>The height of all panel rows on the Stream Deck combined in pixels.</p>"},{"title":"Page#HOLD_TIME","link":"<a href=\"Page.html#HOLD_TIME\">HOLD_TIME</a>","description":"<p>The number of milliseconds after the {@link Page#event:down} is triggered that the\n{@link Page#event:hold} will be triggered. A value of <code>0</code> means the {@link Page#event:hold}\nis disabled. If undefined {@link StreamDeck#event:hold|StreamDeck#hold events} will be\nallowed to propagate from the {@link StreamDeck} that created the {@link Page}.</p>"},{"title":"Page#IDLE_TIME","link":"<a href=\"Page.html#IDLE_TIME\">IDLE_TIME</a>","description":"<p>The number of milliseconds of inactivity before the {@link Page#event:idle} is triggered.\nA value of <code>0</code> means the {@link Page#event:idle} is disabled.</p>"},{"title":"Page#brightness","link":"<a href=\"Page.html#brightness\">brightness</a>","description":"<p>The brightness of Stream Deck's panel when the {@link Page} has focus. Value is a float\nbetween <code>0</code> and <code>1</code> inclusive.</p>"},{"title":"Page#backgroundImage","link":"<a href=\"Page.html#backgroundImage\">backgroundImage</a>","description":"<p>The background image of the {@link Page}.</p>"},{"title":"Page#keys","link":"<a href=\"Page.html#keys\">keys</a>","description":"<p>A Map of {@link Key|Keys} currently attached to the {@link Page}, stored by key slot index.</p>"},{"title":"Page#destroyed","link":"<a href=\"Page.html#destroyed\">destroyed</a>","description":"<p>Whether or not the {@link Page} has been destroyed.</p>"},{"title":"Page#event:brightness","link":"<a href=\"Page.html#event:event:brightness\">event:brightness</a>","description":"<p>Brightness event fired when setting the {@link Page|Page's} <code>{@link Page#brightness}</code>.</p>"},{"title":"Page#event:focus","link":"<a href=\"Page.html#event:event:focus\">event:focus</a>","description":"<p>Focus event fired when the {@link Page} gains focus.</p>"},{"title":"Page#event:blur","link":"<a href=\"Page.html#event:event:blur\">event:blur</a>","description":"<p>Blur event fired when the {@link Page} loses focus.</p>"},{"title":"Page#event:attach","link":"<a href=\"Page.html#event:event:attach\">event:attach</a>","description":"<p>Attach event fired when a {@link Key} is attached to the {@link Page}.</p>"},{"title":"Page#event:detach","link":"<a href=\"Page.html#event:event:detach\">event:detach</a>","description":"<p>Detach event fired when a {@link Key} is detached from the {@link Page}.</p>"},{"title":"Page#event:down","link":"<a href=\"Page.html#event:event:down\">event:down</a>","description":"<p>Down event fired when a key is pressed and the {@link Page} has focus.</p>"},{"title":"Page#event:hold","link":"<a href=\"Page.html#event:event:hold\">event:hold</a>","description":"<p>Hold event fired when a key is pressed down for <code>{@link Page#HOLD_TIME}</code>\nmilliseconds. If <code>{@link Page#HOLD_TIME}</code> is <code>0</code> this event is disabled. If\n<code>{@link Page#HOLD_TIME}</code> is undefined {@link StreamDeck#event:hold|StreamDeck#hold events}\nwill be allowed to propagate from the {@link StreamDeck} that created the {@link Page}.</p>"},{"title":"Page#event:up","link":"<a href=\"Page.html#event:event:up\">event:up</a>","description":"<p>Up event fired when a key is released and the {@link Page} had focus when it\nwas initially pressed.</p>"},{"title":"Page#event:click","link":"<a href=\"Page.html#event:event:click\">event:click</a>","description":"<p>Click event fired after the {@link Page#event:up} if the {@link Page#event:hold} had not\nbeen fired.</p>"},{"title":"Page#event:held","link":"<a href=\"Page.html#event:event:held\">event:held</a>","description":"<p>Held event fired after the {@link Page#event:up} if the {@link Page#event:hold} had been\nfired.</p>"},{"title":"Page#event:activity","link":"<a href=\"Page.html#event:event:activity\">event:activity</a>","description":"<p>Activity event fired after a user interacts with the Stream Deck device's keys\nwhile the {@link Page} has focus or when the {@link Page} gains focus.</p>"},{"title":"Page#event:idle","link":"<a href=\"Page.html#event:event:idle\">event:idle</a>","description":"<p>Idle event fired after {@link Page#IDLE_TIME} milliseconds of inactivity. If\n{@link Page#IDLE_TIME} is <code>0</code> this event is disabled.</p>"},{"title":"Page#event:error","link":"<a href=\"Page.html#event:event:error\">event:error</a>","description":"<p>Error event fired when an error occurs.</p>"},{"title":"Page#event:create","link":"<a href=\"Page.html#event:event:create\">event:create</a>","description":"<p>Create event fired when the {@link Page} is created.</p>"},{"title":"Page#event:destroy","link":"<a href=\"Page.html#event:event:destroy\">event:destroy</a>","description":"<p>Destroy event fired when the {@link Page} is destroyed.</p>"},{"title":"Page#setBrightness","link":"<a href=\"Page.html#setBrightness\">setBrightness</a>","description":"<p>Set the brightness of the Stream Deck's panel. If no brightness value is given the\n{@link StreamDeck} that created the {@link Page} will be allowed to use\nit's <code>{@link StreamDeck#brightness}</code> value instead.</p>"},{"title":"Page#focus","link":"<a href=\"Page.html#focus\">focus</a>","description":"<p>Set the <code>{@link StreamDeck#focusedPage}</code> of the {@link StreamDeck} that created the\n{@link Page} to the {@link Page}.</p>"},{"title":"Page#blur","link":"<a href=\"Page.html#blur\">blur</a>","description":"<p>Set the <code>{@link StreamDeck#focusedPage}</code> of the {@link StreamDeck} that created the\n{@link Page} to the <code>{@link StreamDeck#defaultPage}</code> if the {@link Page} has focus.</p>"},{"title":"Page#attachKey","link":"<a href=\"Page.html#attachKey\">attachKey</a>","description":"<p>Attach a {@link Key} to the first free key slot on the {@link Page}.</p>"},{"title":"Page#attachKey(2)","link":"<a href=\"Page.html#attachKey2\">attachKey</a>","description":"<p>Attach a {@link Key} to a key slot index on the {@link Page}.</p>"},{"title":"Page#attachKey(3)","link":"<a href=\"Page.html#attachKey3\">attachKey</a>","description":"<p>Attach a {@link Key} to key slot coordinates on the {@link Page}.</p>"},{"title":"Page#detachKey","link":"<a href=\"Page.html#detachKey\">detachKey</a>","description":"<p>Detach a {@link Key} from the first key slot index to which the {@link Key} is attached\non the {@link Page}.</p>"},{"title":"Page#detachKey(2)","link":"<a href=\"Page.html#detachKey2\">detachKey</a>","description":"<p>Detach a {@link Key} from a key slot index on the {@link Page}.</p>"},{"title":"Page#detachKey(3)","link":"<a href=\"Page.html#detachKey3\">detachKey</a>","description":"<p>Detach a {@link Key} from key slot coordinates on the {@link Page}.</p>"},{"title":"Page#createBackgroundImage","link":"<a href=\"Page.html#createBackgroundImage\">createBackgroundImage</a>","description":"<p>Create a new {@link Image} with a width of <code>{@link Page#PANEL_WIDTH}</code> and a height\nof <code>{@link Page#PANEL_HEIGHT}</code>. The created {@link Image} will have split frames.</p>"},{"title":"Page#setBackgroundImage","link":"<a href=\"Page.html#setBackgroundImage\">setBackgroundImage</a>","description":"<p>Set the background image of the {@link Page}. If no image argument is passed this is the\nsame as calling {@link Page#clearBackgroundImage}.</p>"},{"title":"Page#clearBackgroundImage","link":"<a href=\"Page.html#clearBackgroundImage\">clearBackgroundImage</a>","description":"<p>Clear the background image of the {@link Page}.</p>"},{"title":"Page#getBackgroundFrame","link":"<a href=\"Page.html#getBackgroundFrame\">getBackgroundFrame</a>","description":"<p>Get the current frame of the background image for the {@link Page}. If no background image\nis set or if the background image frame has not yet loaded returns <code>null</code>.</p>"},{"title":"Page#draw","link":"<a href=\"Page.html#draw\">draw</a>","description":"<p>Draw the {@link Page} to the Stream Deck's panel.</p>"},{"title":"Page#destroy","link":"<a href=\"Page.html#destroy\">destroy</a>","description":"<p>Clean up all internal state data used by the {@link Page} in preparation for garbage\ncollection and detach all attached {@link Key|Keys}.</p>"},{"title":"StreamDeck","link":"<a href=\"StreamDeck.html\">StreamDeck</a>","description":"<p>An instance of {@link StreamDeck} represents a Stream Deck device accessed via\n{@link module:streamdeck-ui-node.openStreamDeck} or {@link module:streamdeck-ui-node.manageStreamDeck}.</p>"},{"title":"StreamDeck#STREAMDECK_NODE","link":"<a href=\"StreamDeck.html#STREAMDECK_NODE\">STREAMDECK_NODE</a>","description":"<p>The {@link external:@elgato-stream-deck/node} instance managed by the {@link StreamDeck}.</p>"},{"title":"StreamDeck#HID_PATH","link":"<a href=\"StreamDeck.html#HID_PATH\">HID_PATH</a>","description":"<p>The HID path of the Stream Deck device.</p>"},{"title":"StreamDeck#MODEL","link":"<a href=\"StreamDeck.html#MODEL\">MODEL</a>","description":"<p>The {@link module:streamdeck-ui-node.StreamDeckModel} of the Stream Deck device.</p>"},{"title":"StreamDeck#PRODUCT_NAME","link":"<a href=\"StreamDeck.html#PRODUCT_NAME\">PRODUCT_NAME</a>","description":"<p>The product name of the Stream Deck device.</p>"},{"title":"StreamDeck#SERIAL_NUMBER","link":"<a href=\"StreamDeck.html#SERIAL_NUMBER\">SERIAL_NUMBER</a>","description":"<p>The serial number found on the Stream Deck device.</p>"},{"title":"StreamDeck#FIRMWARE_VERSION","link":"<a href=\"StreamDeck.html#FIRMWARE_VERSION\">FIRMWARE_VERSION</a>","description":"<p>The firmware version on the Stream Deck device.</p>"},{"title":"StreamDeck#KEY_COUNT","link":"<a href=\"StreamDeck.html#KEY_COUNT\">KEY_COUNT</a>","description":"<p>The number of keys on the Stream Deck.</p>"},{"title":"StreamDeck#KEY_WIDTH","link":"<a href=\"StreamDeck.html#KEY_WIDTH\">KEY_WIDTH</a>","description":"<p>The width of each key on the Stream Deck in pixels.</p>"},{"title":"StreamDeck#KEY_HEIGHT","link":"<a href=\"StreamDeck.html#KEY_HEIGHT\">KEY_HEIGHT</a>","description":"<p>The height of each key on the Stream Deck in pixels.</p>"},{"title":"StreamDeck#PANEL_ROW_COUNT","link":"<a href=\"StreamDeck.html#PANEL_ROW_COUNT\">PANEL_ROW_COUNT</a>","description":"<p>The number of rows on the Stream Deck's panel.</p>"},{"title":"StreamDeck#PANEL_COLUMN_COUNT","link":"<a href=\"StreamDeck.html#PANEL_COLUMN_COUNT\">PANEL_COLUMN_COUNT</a>","description":"<p>The number of columns on the Stream Deck's panel.</p>"},{"title":"StreamDeck#PANEL_WIDTH","link":"<a href=\"StreamDeck.html#PANEL_WIDTH\">PANEL_WIDTH</a>","description":"<p>The width of all panel columns on the Stream Deck combined in pixels.</p>"},{"title":"StreamDeck#PANEL_HEIGHT","link":"<a href=\"StreamDeck.html#PANEL_HEIGHT\">PANEL_HEIGHT</a>","description":"<p>The height of all panel rows on the Stream Deck combined in pixels.</p>"},{"title":"StreamDeck#HOLD_TIME","link":"<a href=\"StreamDeck.html#HOLD_TIME\">HOLD_TIME</a>","description":"<p>The number of milliseconds after the {@link StreamDeck#event:down} is triggered that\nthe {@link StreamDeck#event:hold} will be triggered. A value of <code>0</code> means the\n{@link StreamDeck#event:hold} is disabled.</p>"},{"title":"StreamDeck#PRESS_TIME","link":"<a href=\"StreamDeck.html#PRESS_TIME\">PRESS_TIME</a>","description":"<p>The default number of milliseconds after the {@link Key#event:down} is triggered that\nthe press scaling effect will apply on {@link Key|Keys} created by the {@link StreamDeck}.\nA value of <code>0</code> means the press scaling effect last until the {@link Key#event:up} is\ntriggered.</p>"},{"title":"StreamDeck#PRESS_SCALE","link":"<a href=\"StreamDeck.html#PRESS_SCALE\">PRESS_SCALE</a>","description":"<p>The default scale any {@link Key|Keys} created by the {@link StreamDeck} will use for the\npress scaling effect. A value of <code>1</code> means the press scaling effect is disabled.</p>"},{"title":"StreamDeck#IDLE_TIME","link":"<a href=\"StreamDeck.html#IDLE_TIME\">IDLE_TIME</a>","description":"<p>The number of milliseconds of inactivity before the {@link StreamDeck#event:idle} is\ntriggered. A value of <code>0</code> means the {@link StreamDeck#event:idle} is disabled.</p>"},{"title":"StreamDeck#brightness","link":"<a href=\"StreamDeck.html#brightness\">brightness</a>","description":"<p>The brightness of Stream Deck's panel. Value is a float between <code>0</code> and <code>1</code> inclusive.\nCan be overridden by the <code>{@link StreamDeck#focusedPage}</code> if the\n<code>{@link StreamDeck#focusedPage}</code> has <code>{@link Page#brightness}</code> set.</p>"},{"title":"StreamDeck#defaultPage","link":"<a href=\"StreamDeck.html#defaultPage\">defaultPage</a>","description":"<p>The default {@link Page} that will gain focus when the <code>{@link StreamDeck#focusedPage}</code>\nloses focus.</p>"},{"title":"StreamDeck#focusedPage","link":"<a href=\"StreamDeck.html#focusedPage\">focusedPage</a>","description":"<p>The {@link Page} that currently has focus on the {@link StreamDeck}.</p>"},{"title":"StreamDeck#pages","link":"<a href=\"StreamDeck.html#pages\">pages</a>","description":"<p>All {@link Page|Pages} created by the {@link StreamDeck} that have not been destroyed.</p>"},{"title":"StreamDeck#keys","link":"<a href=\"StreamDeck.html#keys\">keys</a>","description":"<p>All {@link Key|Keys} created by the {@link StreamDeck} that have not been destroyed.</p>"},{"title":"StreamDeck#destroyed","link":"<a href=\"StreamDeck.html#destroyed\">destroyed</a>","description":"<p>Whether or not the {@link StreamDeck} has been destroyed.</p>"},{"title":"StreamDeck#event:brightness","link":"<a href=\"StreamDeck.html#event:event:brightness\">event:brightness</a>","description":"<p>Brightness event fired when setting the {@link StreamDeck|StreamDeck's}\n<code>{@link StreamDeck#brightness}</code>.</p>"},{"title":"StreamDeck#event:focus","link":"<a href=\"StreamDeck.html#event:event:focus\">event:focus</a>","description":"<p>Focus event fired when a {@link Page} gains focus.</p>"},{"title":"StreamDeck#event:blur","link":"<a href=\"StreamDeck.html#event:event:blur\">event:blur</a>","description":"<p>Blur event fired when a {@link Page} loses focus.</p>"},{"title":"StreamDeck#event:page","link":"<a href=\"StreamDeck.html#event:event:page\">event:page</a>","description":"<p>Page event fired when a new {@link Page} is created.</p>"},{"title":"StreamDeck#event:key","link":"<a href=\"StreamDeck.html#event:event:key\">event:key</a>","description":"<p>Key event fired when a new {@link Key} is created.</p>"},{"title":"StreamDeck#event:attach","link":"<a href=\"StreamDeck.html#event:event:attach\">event:attach</a>","description":"<p>Attach event fired when a {@link Key} is attached to a {@link Page}.</p>"},{"title":"StreamDeck#event:detach","link":"<a href=\"StreamDeck.html#event:event:detach\">event:detach</a>","description":"<p>Detach event fired when a {@link Key} is detached from a {@link Page}.</p>"},{"title":"StreamDeck#event:down","link":"<a href=\"StreamDeck.html#event:event:down\">event:down</a>","description":"<p>Down event fired when a key is pressed.</p>"},{"title":"StreamDeck#event:hold","link":"<a href=\"StreamDeck.html#event:event:hold\">event:hold</a>","description":"<p>Hold event fired when a key is pressed down for <code>{@link StreamDeck#HOLD_TIME}</code>\nmilliseconds. If <code>{@link StreamDeck#HOLD_TIME}</code> is <code>0</code> this event is disabled.</p>"},{"title":"StreamDeck#event:up","link":"<a href=\"StreamDeck.html#event:event:up\">event:up</a>","description":"<p>Up event fired when a key is released.</p>"},{"title":"StreamDeck#event:click","link":"<a href=\"StreamDeck.html#event:event:click\">event:click</a>","description":"<p>Click event fired after the {@link StreamDeck#event:up} if the\n{@link StreamDeck#event:hold} had not been fired.</p>"},{"title":"StreamDeck#event:held","link":"<a href=\"StreamDeck.html#event:event:held\">event:held</a>","description":"<p>Held event fired after the {@link StreamDeck#event:up} if the\n{@link StreamDeck#event:hold} had been fired.</p>"},{"title":"StreamDeck#event:activity","link":"<a href=\"StreamDeck.html#event:event:activity\">event:activity</a>","description":"<p>Activity event fired after a user interacts with the Stream Deck device or the focused\n{@link Page} has been changed.</p>"},{"title":"StreamDeck#event:idle","link":"<a href=\"StreamDeck.html#event:event:idle\">event:idle</a>","description":"<p>Idle event fired after <code>{@link StreamDeck#IDLE_TIME}</code> milliseconds inactivity. If\n<code>{@link StreamDeck#IDLE_TIME}</code> is <code>0</code> this event is disabled.</p>"},{"title":"StreamDeck#event:error","link":"<a href=\"StreamDeck.html#event:event:error\">event:error</a>","description":"<p>Error event fired when an error occurs.</p>"},{"title":"StreamDeck#event:destroy","link":"<a href=\"StreamDeck.html#event:event:destroy\">event:destroy</a>","description":"<p>Destroy event fired when the {@link StreamDeck} is destroyed.</p>"},{"title":"StreamDeck#setBrightness","link":"<a href=\"StreamDeck.html#setBrightness\">setBrightness</a>","description":"<p>Set the brightness of the Stream Deck's panel.</p>"},{"title":"StreamDeck#setDefaultPage","link":"<a href=\"StreamDeck.html#setDefaultPage\">setDefaultPage</a>","description":"<p>Set the default {@link Page} for the {@link StreamDeck}.</p>"},{"title":"StreamDeck#setFocusedPage","link":"<a href=\"StreamDeck.html#setFocusedPage\">setFocusedPage</a>","description":"<p>Set the {@link Page} that currently has focus on the {@link StreamDeck}.</p>"},{"title":"StreamDeck#createPage","link":"<a href=\"StreamDeck.html#createPage\">createPage</a>","description":"<p>Create a new {@link Page}.</p>"},{"title":"StreamDeck#createKey","link":"<a href=\"StreamDeck.html#createKey\">createKey</a>","description":"<p>Create a new {@link Key}.</p>"},{"title":"StreamDeck#createPageBackgroundImage","link":"<a href=\"StreamDeck.html#createPageBackgroundImage\">createPageBackgroundImage</a>","description":"<p>Create a new {@link Image} with a width of <code>{@link StreamDeck#PANEL_WIDTH}</code> and a height\nof <code>{@link StreamDeck#PANEL_HEIGHT}</code>. The created {@link Image} will have split frames.</p>"},{"title":"StreamDeck#createKeyBackgroundImage","link":"<a href=\"StreamDeck.html#createKeyBackgroundImage\">createKeyBackgroundImage</a>","description":"<p>Create a new {@link Image} with a width of <code>{@link StreamDeck#KEY_WIDTH}</code> and a height of\n<code>{@link StreamDeck#KEY_HEIGHT}</code>.</p>"},{"title":"StreamDeck#createKeyImage","link":"<a href=\"StreamDeck.html#createKeyImage\">createKeyImage</a>","description":"<p>Create a new {@link Image} with a width of <code>{@link StreamDeck#KEY_WIDTH}</code> and a height of\n<code>{@link StreamDeck#KEY_HEIGHT}</code>. The newly created {@link Image} will have scaled frames if applicable.</p>"},{"title":"StreamDeck#destroy","link":"<a href=\"StreamDeck.html#destroy\">destroy</a>","description":"<p>Clean up all internal state data used by the {@link StreamDeck} in preparation for garbage\ncollection. This also destroys all {@link Page|Pages} and {@link Key|Keys} created by the\n{@link StreamDeck}.</p>"},{"title":"StreamDeck#close","link":"<a href=\"StreamDeck.html#close\">close</a>","description":"<p>Destroy the {@link StreamDeck} and all {@link Page|Pages} and {@link Key|Keys} created\nby the {@link StreamDeck}, then close <code>{@link StreamDeck#STREAMDECK_NODE}</code>.</p>\n<p>Returns a Promise that resolves once <code>{@link StreamDeck#STREAMDECK_NODE}</code> has been closed.</p>"}]}